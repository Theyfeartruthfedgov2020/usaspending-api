version: '3.7'

# See run instructions in accompanying Dockerfile
services:

  usaspending-db:
    container_name: usaspending-db
    image: postgres:10.6-alpine
    volumes:
      - type: bind
        source: ${POSTGRES_CLUSTER_DIR}
        target: /var/lib/postgresql/data
    restart: on-failure:3 # Will attempt to start the db 3 times
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: data_store_api

  usaspending-manage:
    build: .
    volumes:
     - .:/dockermount
    command: python3 -u manage.py shell
    environment:
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api
      ES_HOSTNAME: ${ES_HOST}:${ES_PORT}
      DATA_BROKER_DATABASE_URL: postgresql://${BROKER_USER}:${BROKER_PASSWORD}@${BROKER_HOST}:${BROKER_PORT}/data_broker

  usaspending-api:
    build: .
    volumes:
      - .:/dockermount
    ports:
      - 8000:8000
    depends_on:
      - usaspending-db
    restart: on-failure:3 # 3 max attempt, and then it will stop restarting
    # Must wait on postgres db to be up (~9s)
    command: /bin/sh -c "sleep 9s; python3 -u manage.py runserver --verbosity 2 0.0.0.0:8000"
    environment:
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      RUN_LOCAL_DOWNLOAD_IN_PROCESS: "False"
      DB_SOURCE: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api
      DB_R1: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api
      DOWNLOAD_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api
      ES_HOSTNAME: ${ES_HOST}:${ES_PORT}

  usaspending-bulk-download:
    build: .
    restart: on-failure:5 # 5 max attempt, and then it will stop restarting. NOTE: bulk download errors will cause one failure+restart iterations
    volumes:
    - .:/dockermount
    command: python3 manage.py download_sqs_worker
    environment:
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api
      DOWNLOAD_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/data_store_api

  usaspending-es:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
      environment:
        - node.name=usaspending-es
        - discovery.seed_hosts=usaspending-es
        - cluster.initial_master_nodes=usaspending-es
        - cluster.name=usaspending
        - network.host=0.0.0.0
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms1536m -Xmx1536m"  # Ensure Docker is allocated plenty of memory, otherwise this will fail
      # Inject plugin install, then resume with orignial entrypoint command
      command: /bin/sh -c "if [ ! -d /usr/share/elasticsearch/plugins/mapper-murmur3 ]; then ./bin/elasticsearch-plugin install mapper-murmur3; fi && /usr/local/bin/docker-entrypoint.sh"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
      - type: bind
        source: ${ES_CLUSTER_DIR}
        target: /usr/share/elasticsearch/data
      ports:
        - 9200:9200
