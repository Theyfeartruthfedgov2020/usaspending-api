{
  "final_name": "mv_pre2008_award_search",
  "refresh": true,
  "matview_sql": [
    "SELECT",
    "  tas.treasury_account_identifiers,",
    "",
    "  awards.id AS award_id,",
    "  awards.category,",
    "  awards.type,",
    "  awards.type_description,",
    "  awards.piid,",
    "  awards.fain,",
    "  awards.uri,",
    "  COALESCE(CASE",
    "    WHEN awards.type IN('07','08') THEN awards.total_subsidy_cost",
    "    ELSE awards.total_obligation",
    "  END, 0)::NUMERIC(23, 2) AS award_amount,",
    "  COALESCE(awards.total_obligation, 0)::NUMERIC(23, 2) AS total_obligation,",
    "  awards.description,",
    "  obligation_to_enum(COALESCE(CASE",
    "    WHEN awards.type IN('07','08') THEN awards.total_subsidy_cost",
    "    ELSE awards.total_obligation",
    "  END, 0)::NUMERIC(23, 2)) AS total_obl_bin,",
    "  COALESCE(awards.total_subsidy_cost, 0)::NUMERIC(23, 2) AS total_subsidy_cost,",
    "  COALESCE(awards.total_loan_value, 0)::NUMERIC(23, 2) AS total_loan_value,",
    "",
    "  COALESCE(recipient_lookup.recipient_hash, MD5(UPPER(",
    "    CASE",
    "      WHEN COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) IS NOT NULL THEN CONCAT('duns-', COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu))",
    "      ELSE CONCAT('name-', COALESCE(transaction_fpds.awardee_or_recipient_legal, transaction_fabs.awardee_or_recipient_legal)) END",
    "  ))::uuid) AS recipient_hash,",
    "  UPPER(COALESCE(recipient_lookup.recipient_name, transaction_fpds.awardee_or_recipient_legal, transaction_fabs.awardee_or_recipient_legal)) AS recipient_name,",
    "  COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) AS recipient_unique_id,",
    "  COALESCE(transaction_fpds.ultimate_parent_unique_ide, transaction_fabs.ultimate_parent_unique_ide) AS parent_recipient_unique_id,",
    "  latest_transaction.business_categories,",
    "",
    "  latest_transaction.action_date,",
    "  latest_transaction.fiscal_year,",
    "  latest_transaction.last_modified_date,",
    "  awards.period_of_performance_start_date,",
    "  awards.period_of_performance_current_end_date,",
    "  awards.date_signed,",
    "  transaction_fpds.ordering_period_end_date::date,",
    "",
    "  COALESCE(transaction_fabs.original_loan_subsidy_cost, 0)::NUMERIC(23, 2) AS original_loan_subsidy_cost,",
    "  COALESCE(transaction_fabs.face_value_loan_guarantee, 0)::NUMERIC(23, 2) AS face_value_loan_guarantee,",
    "",
    "  latest_transaction.awarding_agency_id,",
    "  latest_transaction.funding_agency_id,",
    "  TAA.name AS awarding_toptier_agency_name,",
    "  TFA.name AS funding_toptier_agency_name,",
    "  SAA.name AS awarding_subtier_agency_name,",
    "  SFA.name AS funding_subtier_agency_name,",
    "  TAA.toptier_code AS awarding_toptier_agency_code,",
    "  TFA.toptier_code AS funding_toptier_agency_code,",
    "  SAA.subtier_code AS awarding_subtier_agency_code,",
    "  SFA.subtier_code AS funding_subtier_agency_code,",
    "",
    "  rl_country_lookup.country_code AS recipient_location_country_code,",
    "  rl_country_lookup.country_name AS recipient_location_country_name,",
    "  COALESCE(transaction_fpds.legal_entity_state_code, transaction_fabs.legal_entity_state_code) AS recipient_location_state_code,",
    "  LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.legal_entity_county_code, transaction_fabs.legal_entity_county_code), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 3, '0') AS recipient_location_county_code,",
    "  COALESCE(rl_county_lookup.county_name, transaction_fpds.legal_entity_county_name, transaction_fabs.legal_entity_county_name) AS recipient_location_county_name,",
    "  LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.legal_entity_congressional, transaction_fabs.legal_entity_congressional), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 2, '0') AS recipient_location_congressional_code,",
    "  COALESCE(transaction_fpds.legal_entity_zip5, transaction_fabs.legal_entity_zip5) AS recipient_location_zip5,",
    "  TRIM(TRAILING FROM COALESCE(transaction_fpds.legal_entity_city_name, transaction_fabs.legal_entity_city_name)) AS recipient_location_city_name,",
    "",
    "  pop_country_lookup.country_name AS pop_country_name,",
    "  pop_country_lookup.country_code AS pop_country_code,",
    "  COALESCE(transaction_fpds.place_of_performance_state, transaction_fabs.place_of_perfor_state_code) AS pop_state_code,",
    "  LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.place_of_perform_county_co, transaction_fabs.place_of_perform_county_co), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 3, '0') AS pop_county_code,",
    "  COALESCE(pop_county_lookup.county_name, transaction_fpds.place_of_perform_county_na, transaction_fabs.place_of_perform_county_na) AS pop_county_name,",
    "  transaction_fabs.place_of_performance_code AS pop_city_code,",
    "  COALESCE(transaction_fpds.place_of_performance_zip5, transaction_fabs.place_of_performance_zip5) AS pop_zip5,",
    "  LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.place_of_performance_congr, transaction_fabs.place_of_performance_congr), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 2, '0') AS pop_congressional_code,",
    "  TRIM(TRAILING FROM COALESCE(transaction_fpds.place_of_perform_city_name, transaction_fabs.place_of_performance_city)) AS pop_city_name,",
    "",
    "  transaction_fabs.cfda_number,",
    "  transaction_fabs.sai_number,",
    "  transaction_fpds.type_of_contract_pricing,",
    "  transaction_fpds.extent_competed,",
    "  transaction_fpds.type_set_aside,",
    "",
    "  transaction_fpds.product_or_service_code,",
    "  psc.description AS product_or_service_description,",
    "  transaction_fpds.naics AS naics_code,",
    "  transaction_fpds.naics_description",
    "FROM",
    "  awards",
    "INNER JOIN",
    "  transaction_normalized AS latest_transaction",
    "    ON (awards.latest_transaction_id = latest_transaction.id)",
    "LEFT OUTER JOIN",
    "  transaction_fpds",
    "    ON (awards.latest_transaction_id = transaction_fpds.transaction_id AND latest_transaction.is_fpds = true)",
    "LEFT OUTER JOIN",
    "  transaction_fabs",
    "    ON (awards.latest_transaction_id = transaction_fabs.transaction_id AND latest_transaction.is_fpds = false)",
    "LEFT OUTER JOIN",
    "  (SELECT",
    "    legal_business_name AS recipient_name,",
    "    duns,",
    "    recipient_hash",
    "  FROM recipient_lookup AS rlv",
    "  ) recipient_lookup ON recipient_lookup.duns = COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) AND COALESCE(transaction_fpds.awardee_or_recipient_uniqu, transaction_fabs.awardee_or_recipient_uniqu) IS NOT NULL",
    "LEFT OUTER JOIN",
    "  psc ON (transaction_fpds.product_or_service_code = psc.code)",
    "LEFT OUTER JOIN",
    "  agency AS AA",
    "    ON (awards.awarding_agency_id = AA.id)",
    "LEFT OUTER JOIN",
    "  toptier_agency AS TAA",
    "    ON (AA.toptier_agency_id = TAA.toptier_agency_id)",
    "LEFT OUTER JOIN",
    "  subtier_agency AS SAA",
    "    ON (AA.subtier_agency_id = SAA.subtier_agency_id)",
    "LEFT OUTER JOIN",
    "  agency AS FA ON (awards.funding_agency_id = FA.id)",
    "LEFT OUTER JOIN",
    "  toptier_agency AS TFA",
    "    ON (FA.toptier_agency_id = TFA.toptier_agency_id)",
    "LEFT OUTER JOIN",
    "  subtier_agency AS SFA",
    "    ON (FA.subtier_agency_id = SFA.subtier_agency_id)",
    "LEFT OUTER JOIN (",
    "  SELECT",
    "    faba.award_id,",
    "    ARRAY_AGG(DISTINCT taa.treasury_account_identifier) treasury_account_identifiers",
    "  FROM",
    "    treasury_appropriation_account taa",
    "    INNER JOIN financial_accounts_by_awards faba ON taa.treasury_account_identifier = faba.treasury_account_id",
    "  WHERE",
    "    faba.award_id IS NOT NULL",
    "  GROUP BY",
    "    faba.award_id",
    ") tas ON (tas.award_id = awards.id)",
    "LEFT OUTER JOIN",
    "   ref_country_code AS pop_country_lookup on (",
    "      pop_country_lookup.country_code = COALESCE(transaction_fpds.place_of_perform_country_c, transaction_fabs.place_of_perform_country_c, 'USA')",
    "      OR pop_country_lookup.country_name = COALESCE(transaction_fpds.place_of_perform_country_c, transaction_fabs.place_of_perform_country_c))",
    "LEFT OUTER JOIN",
    "   ref_country_code AS rl_country_lookup on (",
    "      rl_country_lookup.country_code = COALESCE(transaction_fpds.legal_entity_country_code, transaction_fabs.legal_entity_country_code, 'USA')",
    "      OR rl_country_lookup.country_name = COALESCE(transaction_fpds.legal_entity_country_code, transaction_fabs.legal_entity_country_code))",
    "LEFT OUTER JOIN",
    " (SELECT DISTINCT ON (state_alpha, county_numeric) state_alpha, county_numeric, UPPER(county_name) AS county_name FROM ref_city_county_state_code) AS rl_county_lookup on",
    "   rl_county_lookup.state_alpha = COALESCE(transaction_fpds.legal_entity_state_code, transaction_fabs.legal_entity_state_code) and",
    "   rl_county_lookup.county_numeric = LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.legal_entity_county_code, transaction_fabs.legal_entity_county_code), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 3, '0')",
    "LEFT OUTER JOIN",
    " (SELECT DISTINCT ON (state_alpha, county_numeric) state_alpha, county_numeric, UPPER(county_name) AS county_name FROM ref_city_county_state_code) AS pop_county_lookup on",
    "   pop_county_lookup.state_alpha = COALESCE(transaction_fpds.place_of_performance_state, transaction_fabs.place_of_perfor_state_code) and",
    "   pop_county_lookup.county_numeric = LPAD(CAST(CAST((REGEXP_MATCH(COALESCE(transaction_fpds.place_of_perform_county_co, transaction_fabs.place_of_perform_county_co), '^[A-Z]*(\\d+)(?:\\.\\d+)?$'))[1] AS smallint) AS text), 3, '0')",
    "WHERE",
    "  latest_transaction.action_date >= '2000-10-01'",
    "  AND latest_transaction.action_date < '2007-10-01'"
  ],
  "indexes": [
    {
      "name": "id",
      "unique": true,
      "columns": [{"name": "award_id"}]
    }, {
      "name": "recipient_hash",
      "columns": [{"name": "recipient_hash"}]
    }, {
      "name": "recipient_unique_id",
      "where": "recipient_unique_id IS NOT NULL",
      "columns": [{"name": "recipient_unique_id"}]
    },{
      "name": "action_date",
      "columns": [{"name": "action_date", "order": "DESC NULLS LAST"}]
    }, {
      "name": "funding_agency_id",
      "where": "funding_agency_id IS NOT NULL",
      "columns": [{"name": "funding_agency_id", "order": "ASC NULLS LAST"}]
    }, {
      "name": "recipient_location_state_code",
      "where": "recipient_location_state_code IS NOT NULL",
      "columns": [{"name": "recipient_location_state_code"}]
    }, {
      "name": "recipient_location_county_code",
      "where": "recipient_location_county_code IS NOT NULL",
      "columns": [{"name": "recipient_location_county_code"}]
    }, {
      "name": "recipient_location_cong_code",
      "where": "recipient_location_congressional_code IS NOT NULL",
      "columns": [{"name": "recipient_location_congressional_code"}]
    }
  ]
}
